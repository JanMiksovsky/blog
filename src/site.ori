{
  # Add slugs to the top-level `posts` folder.
  slugs = postSlugs.js(posts)
  # slugs = @map/keys(posts, =postSlug.js(@key), { deep: @true })

  # Convert posts from markdown to HTML.
  html = @map/values(
    slugs
    @mdHtml
    { deep: @true, extension: 'md→html', preferExistingValue: @true }
  )

  # Apply the post page template to the posts.
  # This is used in the posts archive.
  pages = @map/values(html, postPage.orit, { deep: @true })

  # Add an index page to the year folders in the virtual pages graph. The setScope
  # call captures the scope that includes the current year, ensuring the year.orit
  # template can see that `year` in scope when it is rendered.
  years = @map/values(pages, =@graph/merge(_, @scope/set({
    index.html = yearPage.orit()
  })), { keyName: 'year' })

  # The recent feed is the posts in reverse chronological order.
  # For the `recent` feed, we only want 10 posts.
  reversed = @graph/reverse(html, { deep: @true })
  recent = takeDeep.js(reversed, 10)

  # The feed items are the recent posts with just the necessary feed data.
  feedItems = @map/values(recent, feedItem.js, { deep: @true, extension: 'html→yaml' })
  feed = @scope/extend(feed.yaml, { _: @graph/valuesDeep(feedItems) })

  # Main site
  public = @graph/merge(client, {

    # Add an index page to the overall posts archive.
    posts = @graph/merge(years, {
      index.html = archivePage.orit()
    })

    # Top-level index page
    index.html = index.orit(recent)

    # Contact page
    contact.html = page.orit(@mdHtml(contact.md))
    about.html = page.orit(@mdHtml(about.md))

    feed.json = @json(feed)
    rss.xml = @rss(feed)

    sitemap.xml = @graph/sitemap(public, "https://jan.miksovsky.com")
  })
}