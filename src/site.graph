# Add slugs to the top-level `posts` folder.
slugs = postSlugs.js(posts)
# slugs = mapKeys(posts, =postSlug(@key), { deep: true })

# Convert posts from markdown to HTML.
html = @map/values(
  slugs
  =@mdHtml(@value)
  { deep: @true, extension: 'md→html', preferExistingValue: @true }
)

# Apply the post page template to the posts.
# This is used in the posts archive.
pages = @map/values(html, postPage.ori, { deep: @true })

# Add an index page to the year folders in the virtual pages graph. The setScope
# call captures the scope that includes the current year, ensuring the year.ori
# template can see that `year` in scope when it is rendered.
years = @map/values(pages, =@graph/merge(@value, @scope/set({
  index.html = yearPage.ori()
})), { keyName: 'year' })

# The recent feed is the posts in reverse chronological order.
# For the `recent` feed, we only want 10 posts.
reversed = @graph/reverse(html, { deep: @true })
recent = takeDeep.js(reversed, 10)

# The feed items are the recent posts with just the necessary feed data.
feedItems = @map/values(recent, feedItem.js, { deep: @true, extension: 'html→yaml' })
feed = @scope/extend(feed.yaml, { @input: @graph/valuesDeep(feedItems) })

# Main site
public = @graph/merge(client, {

  foo.html = foo

  # Add an index page to the overall posts archive.
  posts = @graph/merge(years, {
    index.html = archivePage.ori()
  })

  # Top-level index page
  index.html = index.ori()

  # Contact page
  contact.html = page.ori(@mdHtml(contact.md))
  about.html = page.ori(@mdHtml(about.md))

  feed.json = @json(feed)
  rss.xml = @rss(feed)

  sitemap.xml = @graph/sitemap(public, "https://jan.miksovsky.com")
})
