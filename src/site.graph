# Add slugs to the top-level `posts` folder.
slugs = postSlugs(posts)
# slugs = mapKeys(posts, =postSlug(@key))

# Convert posts from markdown to HTML.
html = mapDeep(slugs, =mdHtml(@value), { extension: 'md→html' })

# Apply the post page template to the posts.
# This is used in the posts archive.
pages = mapDeep(html, postPage.ori)

# Add an index page to the year folders in the virtual pages graph. The setScope
# call captures the scope that includes the current year, ensuring the year.ori
# template can see that `year` in scope when it is rendered.
years = map(pages, =merge(@value, setScope({
  index.html = yearPage.ori()
})), { keyName: 'year' })

# The recent feed is the posts in reverse chronological order.
# For the `recent` feed, we only want 10 posts.
reversed = reverse(html)
recent = takeDeep(reversed, 10)

# The feed items are the recent posts with just the necessary feed data.
feedItems = mapDeep(recent, feedItem, { extension: 'html→yaml' })
feed = extendScope(feed.yaml, { @input: valuesDeep(feedItems) })

# Main site
public = merge(client, {

  # Add an index page to the overall posts archive.
  posts = merge(years, {
    index.html = archivePage.ori()
  })

  # Top-level index page
  index.html = index.ori()

  # About page
  about.html = page.ori(mdHtml(about.md))

  feed.json = json(feed)
  rss.xml = feedRss(feed)
})
